import streamlit as st
import math

# VPD hesaplama fonksiyonu
def calculate_vpd(temp, rh):
    # SVP (Saturation Vapor Pressure) hesaplama (Tetens formÃ¼lÃ¼)
    svp = 0.6108 * math.exp((17.27 * temp) / (temp + 237.3))
    # VPD = SVP * (1 - RH/100)
    vpd = svp * (1 - rh / 100)
    return round(vpd, 2)

# Marul iÃ§in VPD deÄŸerlendirme ve Ã¶neriler
def evaluate_vpd_for_lettuce(vpd):
    if 0.6 <= vpd <= 1.0:
        evaluation = "Ä°deal (YeÅŸil BÃ¶lge)"
        suggestion = "Mevcut koÅŸullar marul iÃ§in ideal. Nem ve sÄ±caklÄ±ÄŸÄ± koruyun."
    elif 0.4 <= vpd < 0.6:
        evaluation = "Alt SÄ±nÄ±r (Dikkatli Ä°zleyin)"
        suggestion = "VPD biraz dÃ¼ÅŸÃ¼k, tipburn (yaprak uÃ§ yanÄ±ÄŸÄ±) riski olabilir. HavalandÄ±rmayÄ± artÄ±rÄ±n veya nemi hafifÃ§e dÃ¼ÅŸÃ¼rÃ¼n. Besin Ã§Ã¶zeltisine kalsiyum nitrat ekleyin (100-150 ppm kalsiyum)."
    elif 1.0 < vpd <= 1.2:
        evaluation = "Ãœst SÄ±nÄ±r (Kabul Edilebilir)"
        suggestion = "VPD biraz yÃ¼ksek, ancak tolere edilebilir. Su stresini Ã¶nlemek iÃ§in nemlendirme (sisleme) kullanmayÄ± dÃ¼ÅŸÃ¼nÃ¼n. Hava sirkÃ¼lasyonunu kontrol edin."
    elif vpd < 0.4:
        evaluation = "Ã‡ok DÃ¼ÅŸÃ¼k"
        suggestion = "VPD Ã§ok dÃ¼ÅŸÃ¼k, transpirasyon yetersiz. Mantar hastalÄ±klarÄ± (Ã¶rn. botrytis) riski yÃ¼ksek. HavalandÄ±rmayÄ± artÄ±rÄ±n veya dehumidifier ile nemi dÃ¼ÅŸÃ¼rÃ¼n."
    else:  # vpd > 1.2
        evaluation = "Ã‡ok YÃ¼ksek"
        suggestion = "VPD Ã§ok yÃ¼ksek, su stresi riski var. Nemlendirici (fog sistemi) ile nemi artÄ±rÄ±n (%50-70 hedefleyin) veya sÄ±caklÄ±ÄŸÄ± dÃ¼ÅŸÃ¼rÃ¼n."
    return evaluation, suggestion

# Streamlit ArayÃ¼zÃ¼
st.markdown("<h1 style='text-align: center; color: green;'>ğŸŒ¿ VPD HesaplayÄ±cÄ±</h1>", unsafe_allow_html=True)
st.write("Bitki seÃ§in, nem ve sÄ±caklÄ±k deÄŸerlerini girin, VPD ile birlikte deÄŸerlendirme ve Ã§Ã¶zÃ¼m Ã¶nerilerini gÃ¶rÃ¼n.")

# Bitki seÃ§imi (ÅŸimdilik sadece marul)
plant = st.selectbox("Bitki SeÃ§in", ["Marul", "Domates", "SalatalÄ±k"])
if plant == "Marul":
    evaluation, suggestion = evaluate_vpd_for_lettuce(vpd)
elif plant == "Domates":
    evaluation, suggestion = evaluate_vpd_for_tomato(vpd)
elif plant == "SalatalÄ±k":
    evaluation, suggestion = evaluate_vpd_for_cucumber(vpd)

# Nem ve sÄ±caklÄ±k giriÅŸleri
rh = st.number_input("BaÄŸÄ±l Nem (%RH)", min_value=10.0, max_value=100.0, value=60.0, step=1.0)
temp = st.number_input("SÄ±caklÄ±k (Â°C)", min_value=0.0, max_value=50.0, value=20.0, step=1.0)

# Hesaplama ve sonuÃ§lar
if st.button("Hesapla"):
    # VPD hesapla
    vpd = calculate_vpd(temp, rh)
    
    # Marul iÃ§in deÄŸerlendirme ve Ã¶neriler
    evaluation, suggestion = evaluate_vpd_for_lettuce(vpd)
    
    # SonuÃ§larÄ± gÃ¶ster
    st.subheader("SonuÃ§lar")
    st.write(f"**Hesaplanan VPD:** {vpd} kPa")
    st.write(f"**DeÄŸerlendirme:** {evaluation}")
    st.write(f"**Ã‡Ã¶zÃ¼m Ã–nerileri:** {suggestion}")
    
    # Ã–rnek tablo ile VPD durumunu gÃ¶rselleÅŸtir
    st.subheader("VPD AralÄ±klarÄ± (Marul)")
    vpd_ranges = {
        "VPD AralÄ±ÄŸÄ± (kPa)": ["<0.4", "0.4-0.6", "0.6-1.0", "1.0-1.2", ">1.2"],
        "Durum": ["Ã‡ok DÃ¼ÅŸÃ¼k", "Alt SÄ±nÄ±r", "Ä°deal", "Ãœst SÄ±nÄ±r", "Ã‡ok YÃ¼ksek"],
        "Risk": ["Mantar hastalÄ±klarÄ±", "Tipburn", "SaÄŸlÄ±klÄ±", "Su stresi", "Ciddi su stresi"],
        "Ã–neri": ["HavalandÄ±rma/Ä±sÄ±tma", "HavalandÄ±rma, kalsiyum", "KoÅŸullarÄ± koru", "Nemlendirme", "Nemlendirme/soÄŸutma"]
    }
    st.table(vpd_ranges)
    
    def evaluate_vpd_for_tomato(vpd):
if 0.8 <= vpd <= 1.2:
        return "Ä°deal", "Domates iÃ§in ideal koÅŸullar. Mevcut durumu koruyun."
    elif vpd < 0.8:
        return "DÃ¼ÅŸÃ¼k", "YÃ¼ksek nem Ã§iÃ§ek Ã§Ã¼rÃ¼klÃ¼ÄŸÃ¼ne yol aÃ§abilir. HavalandÄ±rmayÄ± artÄ±rÄ±n."
    else:
        return "YÃ¼ksek", "AÅŸÄ±rÄ± buharlaÅŸma var. Sisleme sistemini devreye alÄ±n."

def evaluate_vpd_for_cucumber(vpd):
if 0.7 <= vpd <= 1.1:
        return "Ä°deal", "SalatalÄ±k iÃ§in ideal. Dengeyi koruyun."
    elif vpd < 0.7:
        return "DÃ¼ÅŸÃ¼k", "Yaprak yÃ¼zeyinde su birikebilir. Dehumidifier kullanÄ±n."
    else:
        return "YÃ¼ksek", "Kuruma riski var. GÃ¶lgeleme yaparak sÄ±caklÄ±ÄŸÄ± dÃ¼ÅŸÃ¼rÃ¼n."


# Not
st.write("**Not:** VPD hesaplamalarÄ±, Tetens formÃ¼lÃ¼ne dayalÄ± yaklaÅŸÄ±k deÄŸerlerdir. Yaprak sÄ±caklÄ±ÄŸÄ± (genellikle hava sÄ±caklÄ±ÄŸÄ±ndan 1-2Â°C dÃ¼ÅŸÃ¼k) daha doÄŸru sonuÃ§lar verebilir.")
